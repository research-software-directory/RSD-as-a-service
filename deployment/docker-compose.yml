# SPDX-FileCopyrightText: 2022 - 2023 Christian Mee√üen (GFZ) <christian.meessen@gfz-potsdam.de>
# SPDX-FileCopyrightText: 2022 - 2023 Ewan Cahen (Netherlands eScience Center) <e.cahen@esciencecenter.nl>
# SPDX-FileCopyrightText: 2022 - 2023 Helmholtz Centre Potsdam - GFZ German Research Centre for Geosciences
# SPDX-FileCopyrightText: 2022 - 2023 Netherlands eScience Center
# SPDX-FileCopyrightText: 2022 Dusan Mijatovic (dv4all)
# SPDX-FileCopyrightText: 2022 Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: 2022 dv4all
#
# SPDX-License-Identifier: Apache-2.0

# THIS DOCKER FILE REQUIRES .env FILE
version: "3.0"

services:
  database:
    container_name: database
    image: ghcr.io/research-software-directory/rsd-saas/database:latest
    expose:
      - 5432
    environment:
      # it uses values from .env file
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_AUTHENTICATOR_PASSWORD
    volumes:
      # persist data in named docker volume
      # to remove use: docker compose down --volumes
      # to inspect use: docker volume ls
      - pgdb:/var/lib/postgresql/data/
    networks:
      - net
    restart: unless-stopped

  backend:
    container_name: backend
    image: ghcr.io/research-software-directory/rsd-saas/backend:latest
    expose:
      - 3500
    environment:
      # it needs to be here to use values from .env file
      - PGRST_DB_URI=postgres://rsd_authenticator:${POSTGRES_AUTHENTICATOR_PASSWORD}@${POSTGRES_DB_HOST}:${POSTGRES_DB_HOST_PORT}/${POSTGRES_DB}
      - PGRST_DB_ANON_ROLE
      - PGRST_DB_SCHEMA
      - PGRST_SERVER_PORT
      - PGRST_JWT_SECRET
    depends_on:
      - database
    networks:
      - net
    restart: unless-stopped

  auth:
    container_name: auth
    image: ghcr.io/research-software-directory/rsd-saas/auth:latest
    expose:
      - 7000
    environment:
      # it uses values from .env file
      - POSTGREST_URL
      - RSD_AUTH_PROVIDERS
      - RSD_ADMIN_EMAIL_LIST
      - RSD_AUTH_USER_MAIL_WHITELIST
      - SURFCONEXT_CLIENT_ID
      - SURFCONEXT_REDIRECT
      - SURFCONEXT_WELL_KNOWN_URL
      - SURFCONEXT_SCOPES
      - HELMHOLTZAAI_CLIENT_ID
      - HELMHOLTZAAI_REDIRECT
      - HELMHOLTZAAI_WELL_KNOWN_URL
      - HELMHOLTZAAI_SCOPES
      - HELMHOLTZAAI_USE_ALLOW_LIST
      - HELMHOLTZAAI_ALLOW_LIST
      - ORCID_CLIENT_ID
      - ORCID_REDIRECT
      - ORCID_WELL_KNOWN_URL
      - ORCID_SCOPES
      - AZURE_CLIENT_ID
      - AZURE_REDIRECT
      - AZURE_WELL_KNOWN_URL
      - AZURE_SCOPES
      - AZURE_ORGANISATION
      - HELMHOLTZAAI_ALLOW_EXTERNAL_USERS
      - AUTH_SURFCONEXT_CLIENT_SECRET
      - AUTH_HELMHOLTZAAI_CLIENT_SECRET
      - AUTH_ORCID_CLIENT_SECRET
      - AUTH_AZURE_CLIENT_SECRET
      - PGRST_JWT_SECRET
    depends_on:
      - database
      - backend
    networks:
      - net
    restart: unless-stopped

  frontend:
    container_name: frontend
    image: ghcr.io/research-software-directory/rsd-saas/frontend:latest
    environment:
      # it uses values from .env file
      - POSTGREST_URL
      - PGRST_JWT_SECRET
      - RSD_AUTH_URL
      - RSD_AUTH_PROVIDERS
      - MATOMO_URL
      - MATOMO_ID
      - SURFCONEXT_CLIENT_ID
      - SURFCONEXT_REDIRECT
      - SURFCONEXT_WELL_KNOWN_URL
      - SURFCONEXT_SCOPES
      - SURFCONEXT_RESPONSE_MODE
      - HELMHOLTZAAI_CLIENT_ID
      - HELMHOLTZAAI_REDIRECT
      - HELMHOLTZAAI_WELL_KNOWN_URL
      - HELMHOLTZAAI_SCOPES
      - HELMHOLTZAAI_RESPONSE_MODE
      - ORCID_CLIENT_ID
      - ORCID_REDIRECT
      - ORCID_WELL_KNOWN_URL
      - ORCID_SCOPES
      - AZURE_CLIENT_ID
      - AZURE_REDIRECT
      - AZURE_WELL_KNOWN_URL
      - AZURE_SCOPES
      - AZURE_LOGIN_PROMPT
      - AZURE_DISPLAY_NAME
      - AZURE_DESCRIPTION_HTML
    expose:
      - 3000
    depends_on:
      - database
      - backend
      - auth
    networks:
      - net
    restart: unless-stopped

  scrapers:
    container_name: scrapers
    image: ghcr.io/research-software-directory/rsd-saas/scrapers:latest
    environment:
      # it uses values from .env file
      - POSTGREST_URL
      - PGRST_JWT_SECRET
      - MAX_REQUESTS_GITHUB
      - MAX_REQUESTS_GITLAB
      - API_CREDENTIALS_GITHUB
      - ZENODO_ACCESS_TOKEN
      - MAX_REQUESTS_DOI
      - CROSSREF_CONTACT_EMAIL
      - ENABLE_OAIPMH_SCRAPER
      - LIBRARIES_IO_ACCESS_TOKEN
    depends_on:
      - database
      - backend
    networks:
      - net
    restart: unless-stopped

  swagger:
    image: swaggerapi/swagger-ui:v4.15.0
    expose:
      - "8080"
    environment:
      - API_URL=${POSTGREST_URL_EXTERNAL}
      - SUPPORTED_SUBMIT_METHODS=[]
    networks:
      - net
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: ghcr.io/research-software-directory/rsd-saas/nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - lets-encrypt:/etc/letsencrypt
    depends_on:
      - database
      - backend
      - auth
      - frontend
    networks:
      - net
    restart: unless-stopped

# define name for docker network
# it should have name: rsd-as-a-service_net
networks:
  net:

# named volumes can be managed easier using docker compose
# volume should have name rsd-as-a-service_pgdb
volumes:
  pgdb:
  lets-encrypt:
