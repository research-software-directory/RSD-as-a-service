-- SPDX-FileCopyrightText: 2023 Felix MÃ¼hlbauer (GFZ) <felix.muehlbauer@gfz-potsdam.de>
-- SPDX-FileCopyrightText: 2023 Helmholtz Centre Potsdam - GFZ German Research Centre for Geosciences
--
-- SPDX-License-Identifier: Apache-2.0

-- EXAMPLE FILE FOR SETTING UP SOME TEST CATEGORIES

-- Remarks:
-- using icons: until #975 is addressed check/edit frontend/components/typography/Icon.tsx for available icons

CREATE FUNCTION add_test_categories()
RETURNS TABLE (LIKE category)
LANGUAGE plpgsql
AS $$
	DECLARE parent1 uuid;
	DECLARE parent2 uuid;
	DECLARE parent3 uuid;
BEGIN
	INSERT INTO category(short_name, name, properties) VALUES
		('Research fruits', 'Some simple research fruits', '{"icon":"science"}'::json) RETURNING id INTO parent1;
	--
	INSERT INTO category(parent, short_name, name) VALUES
		(parent1, 'Apple', 'Apple: An apple a day keeps...'),
		(parent1, 'Bananas', 'Bananas, who bent the bananas?'),
		(parent1, 'Grapes', 'Grapes, I like grapes.'),
		(parent1, 'Pineapple', 'Pineapple is very sweet and tasty.');
	--
	--
	INSERT INTO category(short_name, name, properties) VALUES
		('A Highlighted Category', 'A Highlighted Category', '{"is_highlight":true, "description": "A description helps the user to understand the purpose of this category.", "subtitle": "A category could have a subtitle", "tree_level_labels": ["First person", "Number 2", "Other members"]}'::json) RETURNING id INTO parent1;
	--
	INSERT INTO category(parent, short_name, name) VALUES
		(parent1, '1 Ada', '1 Ada') RETURNING id INTO parent2;
	INSERT INTO category(parent, short_name, name) VALUES
		(parent2, '1.1 Ada, Bart', '1.1 Ada and Bart') RETURNING id INTO parent3;
	INSERT INTO category(parent, short_name, name) VALUES
		(parent3, '1.1.1 Ada, Bart, Chad', '1.1.1 Ada and Bart and Chad');
	INSERT INTO category(parent, short_name, name) VALUES
		(parent3, '1.1.2 Ada, Bart, Carlos', '1.1.2 Ada and Bart and Carlos');
	--
	INSERT INTO category(parent, short_name, name) VALUES
		(parent2, '1.2 Ada, Bob', '1.2 Ada and Bob') RETURNING id INTO parent3;
	INSERT INTO category(parent, short_name, name) VALUES
		(parent3, '1.2.1 Ada, Bob, Chad', '1.2.1 Ada and Bob and Chad');
	INSERT INTO category(parent, short_name, name) VALUES
		(parent3, '1.2.2 Ada, Bob, Carlos', '1.2.2 Ada and Bob and Carlos');
	--
	INSERT INTO category(parent, short_name, name) VALUES
		(parent1, '2 Alice', '2 Alice') RETURNING id INTO parent2;
	INSERT INTO category(parent, short_name, name) VALUES
		(parent2, '2.1 Alice, Bob', '2.1 Alice and Bob') RETURNING id INTO parent3;
	INSERT INTO category(parent, short_name, name) VALUES
		(parent3, '2.1.1 Alice, Bob, Carol', '2.1.1 Alice and Bob and Carol');
	INSERT INTO category(parent, short_name, name) VALUES
		(parent3, '2.1.2 Alice, Bob, Charlie', '2.1.2 Alice and Bob and Charlie');
	--
	--
	INSERT INTO category(short_name, name) VALUES
		('Top level 1', 'Top Level Category 1') RETURNING id INTO parent1;
	--
	INSERT INTO category(parent, short_name, name) VALUES
		(parent1, 'Category A', 'Category A aka 1.1') RETURNING id INTO parent2;
	INSERT INTO category(parent, short_name, name) VALUES
		(parent2, 'Category 1 bit deeper', 'Category 1 bit deeper aka 1.1.1') RETURNING id INTO parent3;
	--
	INSERT INTO category(parent, short_name, name) VALUES
		(parent2, 'Category 2', 'Category 2 aka 1.1.2'),
		(parent2, 'Category 3', 'Category 3 aka 1.1.3'),
		--
		(parent3, 'Category a bit deeper', 'Category a bit deeper aka 1.1.1.1'),
		(parent3, 'Category b bit deeper', 'Category b bit deeper aka 1.1.1.2'),
		(parent3, 'Category c bit deeper and longer', 'Category c bit deeper and longer aka 1.1.1.3'),
		(parent3, 'Category d bit deeper and longer', 'Category d bit deeper and longer aka 1.1.1.4');
	--
	INSERT INTO category(parent, short_name, name) VALUES
		(parent1, 'Category B', 'Category B aka 1.2') RETURNING id INTO parent2;
	INSERT INTO category(parent, short_name, name) VALUES
		(parent2, 'Category 1', 'Category 1 aka 1.2.1'),
		(parent2, 'Category 2', 'Category 2 aka 1.2.2'),
		(parent2, 'Category 3', 'Category 3 aka 1.2.3');
	--
	--
	INSERT INTO category(short_name, name) VALUES
		('Top level 2 bit longer', 'Top level 2 bit longer aka 2') RETURNING id INTO parent1;
	--
	INSERT INTO category(parent, short_name, name) VALUES
		(parent1, 'Category A bit longer', 'Category A bit longer aka 2.1') RETURNING id INTO parent2;
	INSERT INTO category(parent, short_name, name) VALUES
		(parent2, 'Category 1 bit longer', 'Category 1 bit longer aka 2.1.1'),
		(parent2, 'Category 2 bit longer', 'Category 2 bit longer aka 2.1.2'),
		(parent2, 'Category 3 bit longer', 'Category 3 bit longer aka 2.1.3');
	--
	INSERT INTO category(parent, short_name, name) VALUES
		(parent1, 'Category B even more longer', 'Category B even more longer aka 2.2') RETURNING id INTO parent2;
	INSERT INTO category(parent, short_name, name) VALUES
		(parent2, 'Category 1 even more longer', 'Category 1 even more longer aka 2.2.1'),
		(parent2, 'Category 2 even more longer', 'Category 2 even more longer aka 2.2.2'),
		(parent2, 'Category 3 even more longer', 'Category 3 even more longer aka 2.2.3');
END
$$;

SELECT add_test_categories();
