// SPDX-FileCopyrightText: 2023 Dusan Mijatovic (dv4all)
// SPDX-FileCopyrightText: 2023 dv4all
//
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable @next/next/no-img-element */
import Link from 'next/link'

export const SoftwareCard = ({item, direction, index}: {
  item: any; direction?: string; index: number;
}) => {

  const visibleNumberOfKeywords: number = 3
  const visibleNumberOfProgLang: number = 3

  const isHorizontal = !!direction
  return (
    <Link href={'/software/'+item.slug} key={item.id} className="hover:text-inherit">
      <div className={`flex-shrink-0 transition bg-white shadow-md hover:shadow-lg rounded-lg hover:cursor-pointer h-full
                    select-none ${isHorizontal ? 'flex flex-col sm:flex-row w-[300px] sm:w-full' : 'flex-col'}`} >
        {/* Cover image */}
        <img
          className={`
            object-cover
            ${isHorizontal
              ? 'w-full rounded-tr-lg rounded-tl-lg   sm:rounded-bl-lg sm:rounded-tl-lg sm:rounded-tr-none sm:w-[320px] sm:h-[300px]'
              : 'w-full rounded-tr-lg rounded-tl-lg'
            }`}
          src={`https://picsum.photos/id/${index + 35}/500/300`}
          alt={`Cover image for ${item.brand_name}`}
          />

        {/* Card content */}
        <div className={`flex flex-col p-4 ${isHorizontal ? 'max-w-[350px]' : ''}`}>

        <h2 className="text-xl font-medium mb-2 line-clamp-1">
          {item.brand_name}
        </h2>
        <p className="text-gray-600 mb-2 line-clamp-3 break-words">
          {item.short_statement}
        </p>
        {/* keywords */}
        <ul className="text-gray-600 text-sm flex flex-wrap gap-3 mt-5">

          {// limits the keywords to 'visibleNumberOfKeywords' per software.
            item.keywords?.slice(0, visibleNumberOfKeywords)
              .map((keyword:string, index: number) => (
                <li className="bg-slate-100 px-1 m-0 rounded" key={index}>{keyword}</li>
              ))}

          { //  Show the number of keywords that are not visible.
            (item.keywords?.length > 0)
            && (item.keywords?.length > visibleNumberOfKeywords)
            && (item.keywords?.length - visibleNumberOfKeywords > 0)
            && `+ ${item.keywords?.length - visibleNumberOfKeywords}`
          }
        </ul>

        <div className="flex-1" />
          <div className="flex gap-3 justify-between mt-8">

        {/* Languages */}
        <ul className="text-gray-500 text-sm flex flex-wrap gap-1">
          {// limits the keywords to 'visibleNumberOfProgLang' per software.
            item.prog_lang?.slice(0, visibleNumberOfProgLang)
            .map((lang:string, index: number) => (
              <li className="px-1 m-0" key={index}>{lang}</li>
              ))}
          { //  Show the number of keywords that are not visible.
            (item.prog_lang?.length > 0)
            && (item.prog_lang?.length > visibleNumberOfProgLang)
            && (item.prog_lang?.length - visibleNumberOfProgLang > 0)
            && `+ ${item.prog_lang?.length - visibleNumberOfProgLang}`
          }
        </ul>
        {/* Metrics */}
        <div className="flex gap-5">
            <div className="flex gap-2 items-center">
              <svg
                width="18"
                height="14"
                viewBox="0 0 16 12"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                >
                <path
                  d="M2.33301 3.47317C2.33314 2.87434 2.49682 2.28572 2.80817 1.76441C3.11951 1.24311 3.56794 0.80683 4.10995 0.497916C4.65195 0.189001 5.26912 0.0179413 5.90157 0.00133611C6.53401 -0.0152691 7.16026 0.123144 7.71952 0.403144C8.27879 0.683144 8.75209 1.09522 9.09348 1.59939C9.43488 2.10355 9.63279 2.68269 9.66799 3.28059C9.7032 3.87848 9.57451 4.47485 9.29442 5.0118C9.01433 5.54874 8.59234 6.00805 8.06941 6.34513C9.19554 6.73606 10.1723 7.43702 10.874 8.35779C11.5757 9.27855 11.9701 10.377 12.0067 11.5118C12.0051 11.6341 11.9537 11.7512 11.8631 11.8384C11.7725 11.9257 11.6498 11.9765 11.5206 11.9802C11.3914 11.9839 11.2656 11.9401 11.1697 11.8581C11.0737 11.7761 11.015 11.6622 11.0057 11.5402C10.9659 10.3094 10.4215 9.14172 9.48761 8.28446C8.55376 7.42719 7.30395 6.94776 6.00301 6.94776C4.70208 6.94776 3.45226 7.42719 2.51842 8.28446C1.58457 9.14172 1.04009 10.3094 1.00035 11.5402C0.993666 11.6639 0.936068 11.7802 0.839893 11.8642C0.743718 11.9481 0.616616 11.9931 0.485815 11.9895C0.355015 11.9859 0.23092 11.9339 0.140115 11.8447C0.0493107 11.7555 -0.000980916 11.6362 1.44997e-05 11.5124C0.0364184 10.3775 0.43085 9.27894 1.13254 8.35805C1.83422 7.43715 2.81105 6.7361 3.93728 6.34513C3.44267 6.02657 3.03791 5.59832 2.75829 5.09773C2.47866 4.59715 2.33266 4.03941 2.33301 3.47317ZM6.00335 0.946702C5.29539 0.946702 4.61644 1.21288 4.11584 1.68669C3.61524 2.16049 3.33401 2.80311 3.33401 3.47317C3.33401 4.14323 3.61524 4.78585 4.11584 5.25965C4.61644 5.73346 5.29539 5.99964 6.00335 5.99964C6.7113 5.99964 7.39025 5.73346 7.89085 5.25965C8.39145 4.78585 8.67268 4.14323 8.67268 3.47317C8.67268 2.80311 8.39145 2.16049 7.89085 1.68669C7.39025 1.21288 6.7113 0.946702 6.00335 0.946702ZM11.5355 3.47317C11.4368 3.47317 11.3407 3.47949 11.2459 3.49212C11.1798 3.50333 11.1119 3.50182 11.0464 3.48766C10.9808 3.47351 10.919 3.44701 10.8645 3.40975C10.81 3.37248 10.7641 3.32521 10.7293 3.27076C10.6945 3.21631 10.6717 3.15579 10.6622 3.09281C10.6527 3.02984 10.6567 2.9657 10.674 2.90421C10.6912 2.84273 10.7214 2.78516 10.7627 2.73495C10.8039 2.68474 10.8555 2.64291 10.9142 2.61196C10.9729 2.58101 11.0376 2.56157 11.1044 2.5548C11.7682 2.46397 12.4449 2.58461 13.0283 2.89772C13.6116 3.21083 14.0684 3.69864 14.3267 4.28437C14.5851 4.87011 14.6303 5.52052 14.4553 6.13325C14.2803 6.74598 13.895 7.28624 13.36 7.669C14.1464 8.00227 14.8141 8.54379 15.2825 9.22823C15.751 9.91267 16.0001 10.7108 16 11.5263C16 11.6519 15.9473 11.7724 15.8534 11.8613C15.7595 11.9501 15.6322 12 15.4995 12C15.3668 12 15.2395 11.9501 15.1456 11.8613C15.0517 11.7724 14.999 11.6519 14.999 11.5263C14.9989 10.8215 14.759 10.1355 14.3147 9.56984C13.8705 9.00421 13.2456 8.58906 12.5325 8.38589L12.1762 8.28483V7.22624L12.4498 7.09423C12.8554 6.89978 13.1799 6.58164 13.3709 6.19117C13.562 5.8007 13.6084 5.36068 13.5027 4.94216C13.3971 4.52363 13.1454 4.15103 12.7885 3.8845C12.4316 3.61796 11.9902 3.47306 11.5355 3.47317Z"
                  fill="black"
                  />
              </svg>
              <span className="text-sm">{item.contributor_cnt || 0}</span>
            </div>

          <div className="flex gap-2 items-center">
              <svg
                width="14"
                height="10"
                viewBox="0 0 14 10"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                >
                <path
                  d="M5 4C5 3.86739 5.05268 3.74021 5.14645 3.64645C5.24021 3.55268 5.36739 3.5 5.5 3.5H10.5C10.6326 3.5 10.7598 3.55268 10.8536 3.64645C10.9473 3.74021 11 3.86739 11 4C11 4.13261 10.9473 4.25979 10.8536 4.35355C10.7598 4.44732 10.6326 4.5 10.5 4.5H5.5C5.36739 4.5 5.24021 4.44732 5.14645 4.35355C5.05268 4.25979 5 4.13261 5 4ZM5.5 6.5H10.5C10.6326 6.5 10.7598 6.44732 10.8536 6.35355C10.9473 6.25979 11 6.13261 11 6C11 5.86739 10.9473 5.74021 10.8536 5.64645C10.7598 5.55268 10.6326 5.5 10.5 5.5H5.5C5.36739 5.5 5.24021 5.55268 5.14645 5.64645C5.05268 5.74021 5 5.86739 5 6C5 6.13261 5.05268 6.25979 5.14645 6.35355C5.24021 6.44732 5.36739 6.5 5.5 6.5ZM14 1V8.5C13.9984 8.89732 13.8398 9.27789 13.5588 9.55884C13.2779 9.83979 12.8973 9.99835 12.5 10H1.5C1.10326 10 0.722669 9.84283 0.441543 9.56287C0.160418 9.28292 0.0016531 8.90299 0 8.50625V2.5C0 2.36739 0.0526784 2.24021 0.146447 2.14645C0.240215 2.05268 0.367392 2 0.5 2C0.632608 2 0.759785 2.05268 0.853553 2.14645C0.947322 2.24021 1 2.36739 1 2.5V8.5C1 8.63261 1.05268 8.75979 1.14645 8.85355C1.24021 8.94732 1.36739 9 1.5 9C1.63261 9 1.75979 8.94732 1.85355 8.85355C1.94732 8.75979 2 8.63261 2 8.5V1C2 0.734784 2.10536 0.48043 2.29289 0.292893C2.48043 0.105357 2.73478 0 3 0H13C13.2652 0 13.5196 0.105357 13.7071 0.292893C13.8946 0.48043 14 0.734784 14 1ZM13 1H3V8.5C2.99995 8.67047 2.97034 8.83964 2.9125 9H12.5C12.6326 9 12.7598 8.94732 12.8536 8.85355C12.9473 8.75979 13 8.63261 13 8.5V1Z"
                  fill="black"
                  />
              </svg>
              <span className="text-sm">{item.mention_cnt || 0}</span>
            </div>

          {/* TODO Add download counts to the cards */}
          {item.downloads > 0 && (
            <div className="flex gap-2 items-center">
              <svg
                width="12"
                height="12"
                viewBox="0 0 12 12"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                >
                <path
                  d="M0.532693 8.16797C0.673971 8.16797 0.809464 8.22409 0.909363 8.32399C1.00926 8.42389 1.06539 8.55938 1.06539 8.70066V10.2987C1.06539 10.3968 1.14493 10.4763 1.24295 10.4763H10.1212C10.1683 10.4763 10.2134 10.4576 10.2467 10.4243C10.28 10.391 10.2987 10.3458 10.2987 10.2987V8.70066C10.2987 8.55938 10.3548 8.42389 10.4547 8.32399C10.5546 8.22409 10.6901 8.16797 10.8314 8.16797C10.9727 8.16797 11.1082 8.22409 11.2081 8.32399C11.308 8.42389 11.3641 8.55938 11.3641 8.70066V10.2987C11.3641 10.6284 11.2332 10.9445 11.0001 11.1776C10.767 11.4107 10.4508 11.5417 10.1212 11.5417H1.24295C0.913299 11.5417 0.59715 11.4107 0.364052 11.1776C0.130953 10.9445 0 10.6284 0 10.2987V8.70066C0 8.55938 0.0561227 8.42389 0.156022 8.32399C0.255921 8.22409 0.391414 8.16797 0.532693 8.16797Z"
                  fill="black"
                  />
                <path
                  d="M0.866531 2.99728C0.91594 2.9478 0.974619 2.90855 1.03921 2.88177C1.1038 2.85499 1.17304 2.8412 1.24297 2.8412C1.31289 2.8412 1.38213 2.85499 1.44672 2.88177C1.51132 2.90855 1.56999 2.9478 1.6194 2.99728L5.14938 6.52655V0.532694C5.14938 0.391415 5.2055 0.255921 5.3054 0.156022C5.4053 0.0561224 5.54079 0 5.68207 0C5.82335 0 5.95884 0.0561224 6.05874 0.156022C6.15864 0.255921 6.21477 0.391415 6.21477 0.532694V6.52655L9.74474 2.99728C9.84458 2.89745 9.97999 2.84136 10.1212 2.84136C10.2624 2.84136 10.3978 2.89745 10.4976 2.99728C10.5975 3.09712 10.6535 3.23253 10.6535 3.37372C10.6535 3.51491 10.5975 3.65032 10.4976 3.75016L6.05851 8.18926C6.0091 8.23874 5.95042 8.278 5.88583 8.30478C5.82124 8.33156 5.752 8.34534 5.68207 8.34534C5.61215 8.34534 5.54291 8.33156 5.47832 8.30478C5.41372 8.278 5.35505 8.23874 5.30564 8.18926L0.866531 3.75016C0.817052 3.70075 0.777799 3.64207 0.751017 3.57748C0.724235 3.51288 0.710449 3.44364 0.710449 3.37372C0.710449 3.3038 0.724235 3.23456 0.751017 3.16996C0.777799 3.10537 0.817052 3.04669 0.866531 2.99728Z"
                  fill="black"
                  />
              </svg>
              <span className="text-sm">34K</span>
              </div>
            )}
          </div>
        </div>
        </div>
      </div>
  </Link>
  )
}
// TODO Only show images every 3rd card for testing purposes
// index % 3 === 0  <-- todo
